package commissionCalc;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Scanner;
import java.util.stream.Stream;

import javax.swing.JOptionPane;

public class Application {

	public static void main(String[] args) {

		Scanner scanner = new Scanner(System.in);
		BufferedWriter bw = null;

		System.out.println("Enter first name: ");
		String firstName = scanner.nextLine();
		System.out.println("Enter last name: ");
		String lastName = scanner.nextLine();
		System.out.println("Enter product: ");
		String product = scanner.nextLine();
		System.out.println("Comments: ");
		String comments = scanner.nextLine();
		System.out.println("Date: ");
		String date = scanner.nextLine();

		try {
			bw = new BufferedWriter(new FileWriter("custinfo.txt", true));
			bw.write(firstName);
			bw.newLine();
			bw.flush();

		} catch (IOException e) {
			e.printStackTrace();
		}
		try {
			bw = new BufferedWriter(new FileWriter("custinfo.txt", true));
			bw.write(lastName);
			bw.newLine();
			bw.flush();

		} catch (IOException e) {
			e.printStackTrace();
		}
		try {
			bw = new BufferedWriter(new FileWriter("custinfo.txt", true));
			bw.write(product);
			bw.newLine();
			bw.flush();

		} catch (IOException e) {
			e.printStackTrace();
		}
		try {
			bw = new BufferedWriter(new FileWriter("custinfo.txt", true));
			bw.write(comments);
			bw.newLine();
			bw.flush();

		} catch (IOException e) {
			e.printStackTrace();
		}

		try {
			bw = new BufferedWriter(new FileWriter("custinfo.txt", true));
			bw.write(date);
			bw.newLine();
			bw.flush();

		} catch (IOException e) {
			e.printStackTrace();
		}

		System.out.println("Enter book price: ");
		double book = scanner.nextDouble();

		System.out.println("Enter actual price: ");
		double actual = scanner.nextDouble();

		double drop = ((book - actual) / book);

		double commperc = (.48 - (drop)) / 2;

		if (drop > .48) {
			System.out.println("Dropped " + 100 * drop
					+ " %, which is greater than a 48% drop. Diller will sarcastically tell you this later when you ask why your commission sucks.Commission is "
					+ .02 * actual * .7 + " of " + .24 * book);

			try {
				bw = new BufferedWriter(new FileWriter("custinfo.txt", true));
				bw.write(String.valueOf(actual));
				bw.newLine();
				bw.flush();

			} catch (IOException e) {
				e.printStackTrace();
			}
			try {
				bw = new BufferedWriter(new FileWriter("custinfo.txt", true));
				bw.write(String.valueOf(.02 * actual * .7));
				bw.newLine();
				bw.flush();

			} catch (IOException e) {
				e.printStackTrace();
			}
			try {
				bw = new BufferedWriter(new FileWriter("custinfo.txt", true));
				bw.write(String.valueOf("----"));
				bw.newLine();
				bw.flush();

			} catch (IOException e) {
				e.printStackTrace();
			}
		}

		else if (drop > .44) {
			System.out.println("Dropped " + 100 * drop
					+ " %, which is greater than a 44% drop but less than 48%. Commission is " + .02 * actual * .7 + " of " + .24 * book);

			try {
				bw = new BufferedWriter(new FileWriter("custinfo.txt", true));
				bw.write(String.valueOf(actual));
				bw.newLine();
				bw.flush();

			} catch (IOException e) {
				e.printStackTrace();
			}

			try {
				bw = new BufferedWriter(new FileWriter("custinfo.txt", true));
				bw.write(String.valueOf(.02 * actual * .7));
				bw.newLine();
				bw.flush();

			} catch (IOException e) {
				e.printStackTrace();
			}
			try {
				bw = new BufferedWriter(new FileWriter("custinfo.txt", true));
				bw.write(String.valueOf("----"));
				bw.newLine();
				bw.flush();

			} catch (IOException e) {
				e.printStackTrace();
			}
		}

		else {
			double comm = commperc * actual * .7;
			System.out.println("Dropped " + 100 * drop + " %. Commission is " + comm + " of " + .24 * book);

			try {
				bw = new BufferedWriter(new FileWriter("custinfo.txt", true));
				bw.write(String.valueOf(actual));
				bw.newLine();
				bw.flush();

			} catch (IOException e) {
				e.printStackTrace();
			}

			try {
				bw = new BufferedWriter(new FileWriter("custinfo.txt", true));
				bw.write(String.valueOf(comm));
				bw.newLine();
				bw.flush();

			} catch (IOException e) {
				e.printStackTrace();
			}
			try {
				bw = new BufferedWriter(new FileWriter("custinfo.txt", true));
				bw.write(String.valueOf("----"));
				bw.newLine();
				bw.flush();

			} catch (IOException e) {
				e.printStackTrace();
			}
			double value = 0;
			while (value != 0) {
				try (Stream<String> lines = Files.lines(Paths.get("custinfo.txt"))) {
					String firstline = lines.skip(7).findFirst().get();
					
					System.out.println(firstline);
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
	}
}
